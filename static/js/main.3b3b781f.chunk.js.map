{"version":3,"sources":["components/RoomList.js","components/HomePage.js","components/CreateRoom.js","components/SelectItems.js","components/ItemList.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["RoomList","props","className","to","onClick","updateRoom","index","style","backgroundColor","color","borderRadius","minWidth","maxWidth","height","marginBottom","fontSize","marginLeft","key","uuidv4","name","width","removeRoom","HomePage","rooms","map","room","id","CreateRoom","useState","type","setRoom","addOption","option","fontWeight","value","opacity","onChange","e","target","paddingLeft","placeholder","marginTop","minHeight","addRoom","SelectItems","selectedItem","setSelectedItem","itemOptions","item","addItem","setShowItems","showItems","ItemList","activateItem","removeItem","Room","currentRoom","show","items","App","setRooms","setCurrentRoom","loading","setLoading","useEffect","storedRooms","localStorage","getItem","storedCurrentRoom","JSON","parse","setItem","stringify","alert","oldRooms","i","newRooms","filter","oldRoom","newRoom","active","length","stereo","on","off","changeItem","newItems","display","justifyContent","padding","exact","path","render","return","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b3b781f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function RoomList(props) {\n  const updateRoom = () => {\n    props.updateRoom(props.index);\n  };\n\n  const remove = () => {\n    props.removeRoom(props.index);\n  };\n  return (\n    <div className=\"rooms\">\n      <Link to=\"/Room\">\n        <button\n          onClick={updateRoom}\n          style={{\n            backgroundColor: props.color,\n            borderRadius: \"10px\",\n            minWidth: \"200px\",\n            maxWidth: \"fit-content\",\n            height: \"30px\",\n            marginBottom: \"10px\",\n            fontSize: \"20px\",\n            marginLeft:\"10px\"\n          }}\n          key={uuidv4()}\n        >\n          {props.name}\n        </button>\n      </Link>\n      <div>\n        <button\n          style={{\n            borderRadius: \"50%\",\n            width: \"30px\",\n            height: \"30px\",\n            backgroundColor: \"orange\"    \n          }}\n          onClick={remove}\n        >\n          X\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport RoomList from \"./RoomList\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HomePage(props) {\n  return (\n    <div className=\"home\">\n      {props.rooms.map((room, index) => {\n        return (\n          <RoomList\n            removeRoom={props.removeRoom}\n            index={index}\n            updateRoom={props.updateRoom}\n            name={room.name}\n            color={room.color}\n            id={room.key}\n            key={room.key}\n          />\n        );\n      })}\n      <div>\n        <Link to=\"/create-room\">\n          <button className=\"createRoom\">+</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CreateRoom(props) {\n  const [room, setRoom] = useState({ name: \"\", color: \"\", type: \"\" });\n\n  const addNewRoom = () => {\n    props.addRoom(room.name, room.color, room.type);\n  };\n\n  const options = [\"Room type\", \"Bedroom\", \"Bathroom\", \"Kitchen\"];\n  const addOption = options.map(option => {\n    return (\n      <option style={{ fontWeight: \"bold\" }} key={option} value={option}>\n        {option}\n      </option>\n    );\n  });\n\n  const updateRoom = (key, value) => {\n    setRoom({ ...room, [key]: value });\n  };\n\n  return (\n    <div className=\"creationScreen\">\n      <select\n        style={{\n          backgroundColor: \"orange\",\n          opacity:\"0.8\",\n          marginBottom: \"5px\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"15px\"\n        }}\n        onChange={e => {\n          updateRoom(\"type\", e.target.value);\n        }}\n      >\n        {addOption}\n      </select>\n      <input\n        style={{\n          marginBottom: \"5px\",\n          backgroundColor:\"orange\",\n          opacity:\"0.8\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"15px\",\n          paddingLeft: \"3px\"\n        }}\n        placeholder=\"Room name\"\n        onChange={e => {\n          updateRoom(\"name\", e.target.value);\n        }}\n        type=\"text\"\n      ></input>\n      <input\n        style={{\n          marginBottom: \"5px\",\n          backgroundColor:\"orange\",\n          opacity:\"0.8\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"15px\",\n          paddingLeft: \"3px\"\n        }}\n        placeholder=\"Room color\"\n        onChange={e => {\n          updateRoom(\"color\", e.target.value);\n        }}\n        type=\"text\"\n      ></input>\n      <Link to=\"/smart-house/\">\n        <button\n          style={{\n            marginTop: \"20px\",\n            minWidth: \"200px\",\n            minHeight: \"30px\",\n            backgroundColor: \"orange\",\n            borderRadius: \"10px\",\n            fontSize: \"20px\"\n          }}\n          onClick={addNewRoom}\n        >\n          Add Room\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function SelectItems(props) {\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const setItem = item => {\n    setSelectedItem(item);\n  };\n\n  const newItem = () => {\n    props.addItem(selectedItem);\n    props.setShowItems(!props.showItems);\n  };\n\n  const items = [\"Choose item\", \"Air conditioner\", \"Stereo\", \"Lamp\", \"Boiler\"];\n  const itemOptions = items.map(item => (\n    <option style={{ fontWeight: \"bold\" }} key={item} value={item}>\n      {item}\n    </option>\n  ));\n\n  return (\n    <div className=\"selectItem\">\n      <select\n        style={{\n          backgroundColor: \"orange\",\n          opacity: \"0.8\",\n          marginBottom: \"5px\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"15px\"\n        }}\n        onChange={e => setItem(e.target.value)}\n      >\n        {itemOptions}\n      </select>\n      <button style={{borderRadius:\"10px\",backgroundColor:\"gray\"}} onClick={newItem}>Add</button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ItemList(props) {\n  const execute = () => {\n    props.activateItem(props.index, props.item.name);\n  };\n\n  const remove = () => {\n    props.removeItem(props.index);\n  };\n\n  return (\n    <div className=\"currentItems\">\n      <button style={{backgroundColor:props.item.color,borderRadius:\"10px\"}} onClick={execute}>{props.item.name}</button>\n      <button style={{borderRadius:\"10px\",backgroundColor:\"orange\"}} onClick={remove}>X</button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport SelectItems from \"./SelectItems\";\nimport ItemList from \"./ItemList\";\n\nexport default function Room(props) {\n  const [showItems, setShowItems] = useState(false);\n\n  const show = () => {\n    if (showItems)\n      return (\n        <div>\n          <SelectItems\n            showItems={showItems}\n            setShowItems={setShowItems}\n            addItem={props.addItem}\n          />\n        </div>\n      );\n  };\n\n  return (\n    <div className=\"currentRoom\">\n      <div className=\"roomDetails\">\n        <h2 style={{ color: \"white\" }}>{props.currentRoom.type}</h2>\n        <h2 style={{ color: \"white\" }}>{props.currentRoom.name}</h2>\n      </div>\n      <div className=\"addItemButton\">\n        <button\n          style={{\n            borderRadius: \"50%\",\n            width: \"100px\",\n            height: \"100px\",\n            fontSize: \"25px\",\n            backgroundColor: \"orange\"\n          }}\n          onClick={() => setShowItems(!showItems)}\n        >\n          Add Item\n        </button>\n      </div>\n      <div>{show()}</div>\n      <div>\n        {props.currentRoom.items.map((item, index) => {\n          return (\n            <ItemList\n              removeItem={props.removeItem}\n              activateItem={props.activateItem}\n              index={index}\n              showItems={showItems}\n              item={item}\n              key={uuidv4()}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport HomePage from \"./components/HomePage\";\nimport CreateRoom from \"./components/CreateRoom\";\nimport Room from \"./components/Room\";\n\nfunction App() {\n  const [rooms, setRooms] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(-1);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const storedRooms = localStorage.getItem(\"smart-house\");\n    const storedCurrentRoom = localStorage.getItem(\"current-room\");\n    if (storedRooms) {\n      setRooms(JSON.parse(storedRooms));\n    }\n    if (storedCurrentRoom) {\n      setCurrentRoom(JSON.parse(storedCurrentRoom));\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"smart-house\", JSON.stringify(rooms));\n  }, [rooms]);\n\n  useEffect(() => {\n    localStorage.setItem(\"current-room\", JSON.stringify(currentRoom));\n  }, [currentRoom]);\n\n  const addRoom = (name, color, type) => {\n    if (name === \"\" || type === \"\") {\n      return alert(\"ERROR\");\n    }\n    setRooms(oldRooms => [\n      ...oldRooms,\n      {\n        type: type,\n        name: name,\n        color: color,\n        key: uuidv4(),\n        items: []\n      }\n    ]);\n  };\n\n  const updateRoom = index => {\n    setCurrentRoom(index);\n  };\n\n  const removeRoom = i => {\n    const newRooms = rooms.filter((room, index) => index !== i);\n    setRooms([...newRooms]);\n  };\n\n  const addItem = item => {\n    if (item === null || item === \"Choose item\") {\n      return;\n    }\n    const oldRoom = rooms[currentRoom];\n    const newRoom = {\n      ...oldRoom,\n      items: [...oldRoom.items, { name: item, active: false, color: \"red\" }]\n    };\n    setRooms(\n      rooms.map((room, index) => {\n        if (currentRoom === index) {\n          if (room.items.length >= 5) {\n            alert(\"ERROR\");\n            return room;\n          }\n          if (item === \"Boiler\") {\n            if (room.type === \"Bathroom\") {\n              return newRoom;\n            } else {\n              alert(\"ERROR\");\n              return room;\n            }\n          }\n          if (item === \"Stereo\") {\n            let stereo = false;\n            room.items.map(item => {\n              if (item.name === \"Stereo\") {\n                stereo = true;\n              }\n              return item;\n            });\n            if (stereo) {\n              alert(\"ERROR\");\n              return room;\n            }\n            return newRoom;\n          } else {\n            return newRoom;\n          }\n        }\n        return room;\n      })\n    );\n  };\n\n  const activateItem = (i, item) => {\n    const oldRoom = rooms[currentRoom];\n    const on = { name: item, active: true, color: \"green\" };\n    const off = { name: item, active: false, color: \"red\" };\n    const changeItem = oldRoom.items.map((item, index) => {\n      if (index === i) {\n        if (item.active) {\n          return off;\n        }\n        return on;\n      }\n      return item;\n    });\n    const newRoom = { ...oldRoom, items: changeItem };\n    setRooms(\n      rooms.map((room, index) => {\n        if (currentRoom === index) {\n          return newRoom;\n        }\n        return room;\n      })\n    );\n  };\n\n  const removeItem = i => {\n    const oldRoom = rooms[currentRoom];\n    const newItems = oldRoom.items.filter((item, index) => index !== i);\n    setRooms(\n      rooms.map((room, index) => {\n        if (currentRoom === index) {\n          return { ...oldRoom, items: [...newItems] };\n        }\n        return room;\n      })\n    );\n  };\n\n  if (loading) {\n    return <div />;\n  }\n  return (\n    <div className=\"appOwner\">\n      <Router>\n        <div className=\"App\">\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <h1\n              style={{\n                color: \"white\",\n                backgroundColor: \"orange\",\n                padding:\"10px\",\n                borderRadius: \"10px\"\n              }}\n            >\n              Smart House\n            </h1>\n          </div>\n          <Link to=\"/smart-house/\">\n            <button\n              style={{\n                backgroundColor: \"gray\",\n                marginBottom: \"20px\",\n                borderRadius: \"10px\",\n                width: \"100px\",\n                height: \"30px\",\n                fontSize: \"20px\"\n              }}\n            >\n              Home\n            </button>\n          </Link>\n          <Switch>\n            <Route\n              exact\n              path=\"/smart-house/\"\n              render={props => (\n                <HomePage\n                  {...props}\n                  removeRoom={removeRoom}\n                  updateRoom={updateRoom}\n                  rooms={rooms}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/create-room\"\n              render={props => <CreateRoom {...props} addRoom={addRoom} />}\n            />\n            <Route\n              exact\n              path=\"/room\"\n              return\n              render={props => (\n                <Room\n                  {...props}\n                  removeItem={removeItem}\n                  activateItem={activateItem}\n                  setRooms={setRooms}\n                  addItem={addItem}\n                  currentRoom={rooms[currentRoom]}\n                  rooms={rooms}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}